name: Deploy Locally with Self-Hosted Runner + SonarQube

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  DOCKER_PROJECT_NAME: 'ecomapp'
  APP_CONTAINER_NAME: 'product_app'
  DB_CONTAINER_NAME: 'mysql-ecommerce-prod'
  DB_NAME: 'ecommerce_lp2_prod'
  DB_USER: 'root'
  DB_PASSWORD: 'admin123'
  SONAR_HOST_URL: 'http://localhost:9000'        # Cambia si tu SonarQube est√° en otra URL
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}        # Se asume que creaste este secreto

jobs:
  build-analyze-deploy:
    name: Analyze, Build, and Deploy
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: SonarQube Scan
        run: mvn -B verify sonar:sonar \
          -Dsonar.projectKey=ecommerce_prueva \
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
          -Dsonar.login=${{ env.SONAR_TOKEN }}

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Deploy with Docker Compose
        run: |
          echo "‚úÖ Iniciando despliegue en el runner local..."
          cd docker
          echo "üßπ Limpiando despliegue anterior..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "‚ö†Ô∏è No hay despliegue previo"
          echo "üèóÔ∏è Construyendo servicios..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build
          echo "‚è≥ Esperando 30 segundos para DB..."
          sleep 30
          echo "üíæ Inicializando base de datos..."
          cat ../sql/init.sql | docker exec -i ${{ env.DB_CONTAINER_NAME }} mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_NAME }}
          echo "üîç Estado de contenedores:"
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} ps
          echo "üóíÔ∏è √öltimos logs de la app:"
          docker logs --tail 100 ${{ env.APP_CONTAINER_NAME }}
          echo "üéâ ‚úì Despliegue y an√°lisis completados."
